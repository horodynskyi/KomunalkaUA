// <auto-generated />
using System;
using KomunalkaUA.Infrastracture.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace KomunalkaUA.Infrastracture.Database.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("KomunalkaUA.Domain.Models.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Building")
                        .HasColumnType("text");

                    b.Property<string>("FlatNumber")
                        .HasColumnType("text");

                    b.Property<string>("Street")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("KomunalkaUA.Domain.Models.Checkout", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("FlatId")
                        .HasColumnType("integer");

                    b.Property<int?>("TariffId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("FlatId");

                    b.HasIndex("TariffId");

                    b.ToTable("Checkout");
                });

            modelBuilder.Entity("KomunalkaUA.Domain.Models.ElectricMeter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Number")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ElectricMeters");
                });

            modelBuilder.Entity("KomunalkaUA.Domain.Models.Flat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CardNumber")
                        .HasColumnType("text");

                    b.Property<int?>("ElectricMeterId")
                        .HasColumnType("integer");

                    b.Property<int?>("GasMeterId")
                        .HasColumnType("integer");

                    b.Property<long?>("OwnerId")
                        .HasColumnType("bigint");

                    b.Property<long?>("TenantId")
                        .HasColumnType("bigint");

                    b.Property<int?>("WatterMeterId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ElectricMeterId");

                    b.HasIndex("GasMeterId");

                    b.HasIndex("OwnerId");

                    b.HasIndex("TenantId");

                    b.HasIndex("WatterMeterId");

                    b.ToTable("Flats");
                });

            modelBuilder.Entity("KomunalkaUA.Domain.Models.GasMeter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Number")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("GasMeters");
                });

            modelBuilder.Entity("KomunalkaUA.Domain.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("KomunalkaUA.Domain.Models.Tariff", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<double?>("Electric")
                        .HasColumnType("double precision");

                    b.Property<double?>("Gas")
                        .HasColumnType("double precision");

                    b.Property<int>("RentRate")
                        .HasColumnType("integer");

                    b.Property<double?>("Watter")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.ToTable("Tariffs");
                });

            modelBuilder.Entity("KomunalkaUA.Domain.Models.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("FirstName")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<int?>("RoleId")
                        .HasColumnType("integer");

                    b.Property<string>("SecondName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("KomunalkaUA.Domain.Models.WatterMeter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Number")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("WatterMeters");
                });

            modelBuilder.Entity("KomunalkaUA.Domain.Models.Checkout", b =>
                {
                    b.HasOne("KomunalkaUA.Domain.Models.Flat", "Flat")
                        .WithMany("Checkouts")
                        .HasForeignKey("FlatId");

                    b.HasOne("KomunalkaUA.Domain.Models.Tariff", "Tariff")
                        .WithMany("Checkouts")
                        .HasForeignKey("TariffId");

                    b.Navigation("Flat");

                    b.Navigation("Tariff");
                });

            modelBuilder.Entity("KomunalkaUA.Domain.Models.Flat", b =>
                {
                    b.HasOne("KomunalkaUA.Domain.Models.ElectricMeter", "ElectricMeter")
                        .WithMany("Flats")
                        .HasForeignKey("ElectricMeterId");

                    b.HasOne("KomunalkaUA.Domain.Models.GasMeter", "GasMeter")
                        .WithMany("Flats")
                        .HasForeignKey("GasMeterId");

                    b.HasOne("KomunalkaUA.Domain.Models.User", "Owner")
                        .WithMany("Owners")
                        .HasForeignKey("OwnerId");

                    b.HasOne("KomunalkaUA.Domain.Models.User", "Tenant")
                        .WithMany("Tenants")
                        .HasForeignKey("TenantId");

                    b.HasOne("KomunalkaUA.Domain.Models.WatterMeter", "WatterMeter")
                        .WithMany("Flats")
                        .HasForeignKey("WatterMeterId");

                    b.Navigation("ElectricMeter");

                    b.Navigation("GasMeter");

                    b.Navigation("Owner");

                    b.Navigation("Tenant");

                    b.Navigation("WatterMeter");
                });

            modelBuilder.Entity("KomunalkaUA.Domain.Models.User", b =>
                {
                    b.HasOne("KomunalkaUA.Domain.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("KomunalkaUA.Domain.Models.ElectricMeter", b =>
                {
                    b.Navigation("Flats");
                });

            modelBuilder.Entity("KomunalkaUA.Domain.Models.Flat", b =>
                {
                    b.Navigation("Checkouts");
                });

            modelBuilder.Entity("KomunalkaUA.Domain.Models.GasMeter", b =>
                {
                    b.Navigation("Flats");
                });

            modelBuilder.Entity("KomunalkaUA.Domain.Models.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("KomunalkaUA.Domain.Models.Tariff", b =>
                {
                    b.Navigation("Checkouts");
                });

            modelBuilder.Entity("KomunalkaUA.Domain.Models.User", b =>
                {
                    b.Navigation("Owners");

                    b.Navigation("Tenants");
                });

            modelBuilder.Entity("KomunalkaUA.Domain.Models.WatterMeter", b =>
                {
                    b.Navigation("Flats");
                });
#pragma warning restore 612, 618
        }
    }
}
